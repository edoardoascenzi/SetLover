name: Deploy React & FastAPI

on:
  push:
    branches:
      - main # Trigger the workflow on pushes to the main branch.

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: prod

    steps:
      - name: Checkout code
        uses: actions/checkout@v3 # Fetch the latest code from the repository.

      - name: Generate private key
        run: |
          echo "Ensure the .ssh directory exists"
          mkdir -p ~/.ssh
          echo "Save the private key to a file"
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_github_actions
          chmod 600 ~/.ssh/id_github_actions

      - name: Build and deploy project
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_github_actions ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_ADDRESS }} -p ${{ secrets.SERVER_PORT }} << 'EOF'
            set -e

            GIT_REPO=/home/${{ secrets.SERVER_USER }}/SetLover
            REACT_DIR=$GIT_REPO/React/app
            FASTAPI_DIR=$GIT_REPO/FastAPI
            BRANCH=main

            NODE_VERSION=22


            ## Pull latest code
            cd $GIT_REPO
            git fetch
            git reset --hard origin/$BRANCH

            ## React pipeline
            # Loading nvm into the current session...
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"

            # Install Node.js version
            nvm install $NODE_VERSION
            nvm use $NODE_VERSION

            # Build the React app
            cd "$REACT_DIR"
            npm install --silent
            npm run build

            ## FastAPI pipeline
            if [ ! -d "venv" ]; then
                python3 -m venv venv
            fi
            source venv/bin/activate
            [ -f "requirements.txt" ] && pip install -r requirements.txt

            ## Restart services
            sudo systemctl start nginx.service
            sudo systemctl reload nginx.service
            sudo systemctl restart backend.service
          EOF
